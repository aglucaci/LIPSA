
Analysis Description
--------------------
RELAX (a random effects test of selection relaxation) uses a random
effects branch-site model framework to test whether a set of 'Test'
branches evolves under relaxed selection relative to a set of
'Reference' branches (R), as measured by the relaxation parameter (K).
Version 2.1 adds a check for stability in K estimates to try to mitigate
convergence problems. Version 3 provides support for >2 branch sets.
Version 3.1 adds LHC + Nedler-Mead initial fit phase and keyword
support. Version 3.1.1 adds some bug fixes for better convergence.
Version 4.0 adds support for synonymous rate variation. Version 4.1 adds
further support for multiple hit models. Version 4.1.1 adds reporting
for convergence diagnostics

- __Requirements__: in-frame codon alignment and a phylogenetic tree, with at least two
groups of branches defined using the {} notation (one group can be
defined as all unlabeled branches)

- __Citation__: RELAX: Detecting Relaxed Selection in a Phylogenetic Framework (2015).
Mol Biol Evol 32 (3): 820-832

- __Written by__: Sergei L Kosakovsky Pond, Ben Murrell, Steven Weaver and Temple iGEM /
UCSD viral evolution g

- __Contact Information__: spond@temple.edu

- __Analysis Version__: 3.1.1


>code => Universal
/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.treefile.labelled
/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.treefile.labelled

>Loaded a multiple sequence alignment with **548** sequences, **1496** codons, and **1** partitions from `/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta`
Error:
RELAX requires at least one designated set of branches in the tree. in call to assert(HBcVyJjf.option_count>=2, error_msg);

Function call stack
1 :  assert(HBcVyJjf.option_count>=2, error_msg);

	Keyword arguments:
		{
		 "mode":"Group mode",
		 "models":"All",
		 "output":"/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.RELAX.json",
		 "reference-group":"Elasmobranchii",
		 "srv":"Yes",
		 "starting-points":"10"
		}
-------
2 :  ExecuteCommands("assert (`statement`, error_msg)", /home/agl4001/mambaforge/envs/AOC2/share/hyphy/TemplateBatchFiles/libv3/);

	Keyword arguments:
		{
		 "mode":"Group mode",
		 "models":"All",
		 "output":"/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.RELAX.json",
		 "reference-group":"Elasmobranchii",
		 "srv":"Yes",
		 "starting-points":"10"
		}
-------
3 :  [namespace = HBcVyJjf] io.CheckAssertion("`&option_count` >= 2","RELAX requires at least one designated set of branches in the tree.");

	Keyword arguments:
		{
		 "mode":"Group mode",
		 "models":"All",
		 "output":"/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.RELAX.json",
		 "reference-group":"Elasmobranchii",
		 "srv":"Yes",
		 "starting-points":"10"
		}
-------
4 :  [namespace = relax] selected_branches=Call(settings[utility.getGlobalValue("terms.settings.branch_selector")],partitions_and_trees);

	Keyword arguments:
		{
		 "mode":"Group mode",
		 "models":"All",
		 "output":"/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.RELAX.json",
		 "reference-group":"Elasmobranchii",
		 "srv":"Yes",
		 "starting-points":"10"
		}
-------
5 :  [namespace = relax] load_file({utility.getGlobalValue("terms.prefix"):"relax",utility.getGlobalValue("terms.settings"):{utility.getGlobalValue("terms.settings.branch_selector"):"relax.select_branches"}});

	Keyword arguments:
		{
		 "mode":"Group mode",
		 "models":"All",
		 "output":"/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.RELAX.json",
		 "reference-group":"Elasmobranchii",
		 "srv":"Yes",
		 "starting-points":"10"
		}
-------
6 :  namespace 

Step 0.LoadFunctionLibrary("modules/shared-load-file.bf", /home/agl4001/mambaforge/envs/AOC2/share/hyphy/TemplateBatchFiles/SelectionAnalyses/);

Step 1.load_file({utility.getGlobalValue("terms.prefix"):"relax",utility.getGlobalValue("terms.settings"):{utility.getGlobalValue("terms.settings.branch_selector"):"relax.select_branches"}});

Step 2.LoadFunctionLibrary("modules/grid_compute.ibf", /home/agl4001/mambaforge/envs/AOC2/share/hyphy/TemplateBatchFiles/SelectionAnalyses/);;

	Keyword arguments:
		{
		 "mode":"Group mode",
		 "models":"All",
		 "output":"/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/GnathoBCL6.RDP.fasta.RELAX.json",
		 "reference-group":"Elasmobranchii",
		 "srv":"Yes",
		 "starting-points":"10"
		}
-------
# We are operating out of base directory: /athena/melnicklab/users/scratch/agl4001/LIPSA
# Output directory: /athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6
# We will process selection analyses in 1 files
# We will use the following clade labels: ['/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/Elasmobranchii.clade', '/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/Euteleostomi.clade', '/athena/melnicklab/users/scratch/agl4001/LIPSA/results/GnathostomataBCL6/Holocephali.clade']
# Reference clade: Elasmobranchii
